#!/usr/bin/env bash
#
# yt-transkript
# Version: 1.1.0
#
# Project Description:
# Automatically gets the transcript of a YouTube video.
#
# Usage:
# ./yt-transkript "url"
#
# Dependencies:
# - yt-dlp
#
# Author:    Bernd Storck
# Contact:   https://www.facebook.com/BStLinux/
#
# History:   2024-04-10, 2024-04-15
#
# Copyright: 2024, Bernd Storck
# License:   GNU General Public License 3.0
#

url="$1"
outpfile="${2:-transkript.txt}"

LANG="de"
TMP_SUBTITLE_FILE="$(mktemp /tmp/download.XXXXXX)"
echo "Temporary file name will be: \"$TMP_SUBTITLE_FILE.$LANG.vtt\""

# Try download of the subtitles using yt-dlp:
if yt-dlp --write-auto-sub --sub-lang "$LANG" --skip-download "$url" -o "$TMP_SUBTITLE_FILE"; then

  TMP_SUBTITLE_FILE="${TMP_SUBTITLE_FILE}.${LANG}.vtt"

  if [[ -f "$TMP_SUBTITLE_FILE" ]]; then

    # Deletes "<c>" and "</c>" in all lines:
    sed -i -E -e 's:<c>::g' -e 's:</c>::g' "$TMP_SUBTITLE_FILE"

    # Deletes strings like "<00:00:00.840>" in any line:
    sed -Ei 's/<[0-9]{2}:[0-9]{2}:[0-9]{2}\.[0-9]{3}>//g' "$TMP_SUBTITLE_FILE"

    # Deletes all lines beginning with strings like "00:00:00.160 --> 00:00:02.430":
    sed -Ei '/^[0-9]{2}:[0-9]{2}:[0-9]{2}\.[0-9]{3} --> [0-9]{2}:[0-9]{2}:[0-9]{2}\.[0-9]{3}.*$/d' "$TMP_SUBTITLE_FILE"

    # Deletes all empty lines:
    sed -Ei '/^[[:space:]]*$/d' "$TMP_SUBTITLE_FILE"

    # Reduces identical consecutive lines to one line and writes the output file:
    uniq "$TMP_SUBTITLE_FILE" > "$outpfile"

    rm -f "$TMP_SUBTITLE_FILE"  # Clean up temporary files

  else
    echo "Subtitle file not found."
    exit 1

  fi

else
  printf "Es ist ein Fehler aufgetreten! Überprüfen sie die Aufrufwerte!"
  exit 1

fi

exit 0
